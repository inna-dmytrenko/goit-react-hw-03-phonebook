{"version":3,"sources":["components/PhoneBook/PhoneBook.styled.jsx","components/PhoneBookForm/PhoneBookForm.styled.jsx","components/PhoneBook/PhoneBookListItem.jsx","components/PhoneBook/PhoneBookList.jsx","components/PhoneBookForm/PhoneBookForm.jsx","components/PhoneBook/PhoneBookFilter.jsx","components/helpers/FilterContacts.jsx","App.js","index.js"],"names":["Aside","Block","Item","Form","Button","Label","Input","PhoneBookListItem","this","props","name","number","onDeleteContact","id","onClick","Component","PhoneBookList","contacts","map","PhoneBookForm","onSetUserInfo","onAddContact","action","onSubmit","htmlFor","onInput","type","value","pattern","title","required","placeholder","PhoneBookFilter","onSetFilter","filterValue","filterContacts","filter","obj","toLowerCase","includes","trim","App","state","handleSetUserInfo","e","setState","target","handleAddContact","preventDefault","some","el","alert","addContact","handleDeleteContact","handleChangeFilter","localStorage","getItem","parseContacts","JSON","parse","prevProps","prevState","console","log","setItem","stringify","contact","uuidv4","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b69d635.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\r\nexport const Aside = styled.aside`\r\n  background-color: #1035ad;\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  width: 300px;\r\n  padding: 15px;\r\n`;\r\nexport const Block = styled.div`\r\n  padding: 15px;\r\n\r\n  border: 3px solid #fff;\r\n  border-radius: 10px;\r\n`;\r\nexport const Item = styled.li`\r\n  padding: 15px;\r\n  font-weight: 500;\r\n  color: #71b609;\r\n`;\r\n","import styled from \"@emotion/styled/macro\";\r\nexport const Form = styled.form`\r\n  padding: 15px;\r\n`;\r\nexport const Button = styled.button`\r\n  box-sizing: border-box;\r\n  background-color: transparent;\r\n  border: 2px solid #e74c3c;\r\n  border-radius: 0.6em;\r\n  color: #e74c3c;\r\n  cursor: pointer;\r\n  line-height: 1;\r\n  padding: 1.2em 2.8em;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n  border-radius: 3em;\r\n  border-color: #2ecc71;\r\n  color: #2ecc71;\r\n  margin-top: 15px;\r\n  width: 200px;\r\n  background-image: linear-gradient(to bottom, transparent 50%, #2ecc71 50%);\r\n\r\n  &:hover {\r\n    color: #fff;\r\n    background-position: 0 100%;\r\n  }\r\n`;\r\nexport const Label = styled.label`\r\n  color: #2ecc71;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 180px;\r\n  padding: 10px;\r\n  border-radius: 1em;\r\n  background-color: #2ecc71;\r\n  outline: none;\r\n  &:focus {\r\n    background-color: #9bb9e9;\r\n  }\r\n  &::placeholder {\r\n    color: #5f91e2;\r\n  }\r\n`;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Item } from \"./PhoneBook.styled\";\r\nimport { Button } from \"../PhoneBookForm/PhoneBookForm.styled\";\r\n\r\nexport default class PhoneBookListItem extends Component {\r\n  render() {\r\n    const { name, number, onDeleteContact, id } = this.props;\r\n    return (\r\n      <Item>\r\n        <p>\r\n          {name} : {number}\r\n        </p>\r\n\r\n        <Button onClick={onDeleteContact} id={id}>\r\n          Delete\r\n        </Button>\r\n      </Item>\r\n    );\r\n  }\r\n}\r\nPhoneBookListItem.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from \"react\";\r\n\r\nimport PhoneBookListItem from \"./PhoneBookListItem\";\r\n\r\nexport default class PhoneBookList extends Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.contacts.map(({ name, number, id }) => {\r\n          return (\r\n            <PhoneBookListItem\r\n              key={id}\r\n              number={number}\r\n              name={name}\r\n              id={id}\r\n              onDeleteContact={this.props.onDeleteContact}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Button, Label, Input } from \"./PhoneBookForm.styled\";\r\nexport default class PhoneBookForm extends Component {\r\n  render() {\r\n    const { onSetUserInfo, onAddContact, name, number } = this.props;\r\n\r\n    return (\r\n      <Form action=\"\" onSubmit={onAddContact}>\r\n        <Label htmlFor=\"\">\r\n          <p>Name </p>\r\n          <Input\r\n            onInput={onSetUserInfo}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            placeholder=\"Search name\"\r\n          />\r\n        </Label>\r\n        <Label htmlFor=\"\">\r\n          <p>Number</p>\r\n          <Input\r\n            onInput={onSetUserInfo}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            placeholder=\"Search number\"\r\n          />\r\n        </Label>\r\n        <Button>Add contact</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nPhoneBookForm.propTypes = {\r\n  onSetUserInfo: PropTypes.func.isRequired,\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label, Input } from \"../PhoneBookForm/PhoneBookForm.styled\";\r\n\r\nexport default class PhoneBookFilter extends Component {\r\n  render() {\r\n    const { onSetFilter, filterValue } = this.props;\r\n    return (\r\n      <Label>\r\n        <p>Filter contacts by name: </p>\r\n        <Input\r\n          name=\"filter\"\r\n          onInput={onSetFilter}\r\n          type=\"text\"\r\n          value={filterValue}\r\n        />\r\n      </Label>\r\n    );\r\n  }\r\n}\r\nPhoneBookFilter.propTypes = {\r\n  onSetFilter: PropTypes.func.isRequired,\r\n};\r\n","function filterContacts(contacts, filter) {\r\n  return contacts.filter((obj) => {\r\n    return obj.name.toLowerCase().includes(filter.toLowerCase().trim());\r\n  });\r\n}\r\nexport default filterContacts;\r\n","import { Component } from 'react'\r\n\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport PhoneBookList from './components/PhoneBook/PhoneBookList'\r\nimport PhoneBookForm from './components/PhoneBookForm/PhoneBookForm'\r\nimport PhoneBookFilter from './components/PhoneBook/PhoneBookFilter'\r\nimport filterContacts from './components/helpers/FilterContacts'\r\nimport { Aside, Block } from './components/PhoneBook/PhoneBook.styled'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { name: 'Rosie Simpson', number: '459-12-56', id: 'id-1' },\r\n      { name: 'Hermione Kline', number: '443-89-12', id: 'id-2' },\r\n      { name: 'Eden Clements', number: '645-17-79', id: 'id-3' },\r\n      { name: 'Annie Copeland', number: '227-91-26', id: 'id-4' },\r\n    ],\r\n    name: '',\r\n    number: '',\r\n    filter: '',\r\n  }\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts')\r\n    // console.log(contacts)\r\n    const parseContacts = JSON.parse(contacts)\r\n    // console.log(parseContacts)\r\n    if (parseContacts) {\r\n      this.setState({ contacts: parseContacts })\r\n    }\r\n    //  this.setState({ contacts: parseContacts })\r\n    \r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log('App componentDidUpdate')\r\n    if (this.state.contacts !== prevState) {\r\n      console.log('Обновилось поле contacts')\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n    }\r\n  }\r\n  handleSetUserInfo = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n  addContact() {\r\n    const { name, number } = this.state\r\n    const contact = {\r\n      name: name,\r\n      number: number,\r\n      id: uuidv4(),\r\n    }\r\n    this.setState((prev) => ({\r\n      contacts: [...prev.contacts, contact],\r\n      name: '',\r\n      number: '',\r\n    }))\r\n  }\r\n  handleAddContact = (e) => {\r\n    e.preventDefault()\r\n    const { name, number, contacts } = this.state\r\n    if (\r\n      contacts.some((el) => el.name === name) ||\r\n      contacts.some((el) => el.number === number)\r\n    ) {\r\n      alert(`${name} is already in contacts`)\r\n    } else {\r\n      this.addContact()\r\n    }\r\n  }\r\n  handleDeleteContact = (e) => {\r\n    this.setState({\r\n      contacts: this.state.contacts.filter((el) => el.id !== e.target.id),\r\n    })\r\n  }\r\n  handleChangeFilter = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n  render() {\r\n    const { name, number } = this.state\r\n    const contacts = filterContacts(this.state.contacts, this.state.filter)\r\n    return (\r\n      <Aside>\r\n        <h1>Phonebook</h1>\r\n        <PhoneBookForm\r\n          contacts={contacts}\r\n          name={name}\r\n          number={number}\r\n          onSetUserInfo={this.handleSetUserInfo}\r\n          onAddContact={this.handleAddContact}\r\n        />\r\n        <Block>\r\n          <h2>Contacts</h2>\r\n          <PhoneBookFilter\r\n            filterValue={this.state.filter}\r\n            onSetFilter={this.handleChangeFilter}\r\n          />\r\n          <PhoneBookList\r\n            contacts={contacts}\r\n            onDeleteContact={this.handleDeleteContact}\r\n          />\r\n        </Block>\r\n      </Aside>\r\n    )\r\n  }\r\n}\r\n// function App() {\r\n//   return <Form />\r\n// }\r\n\r\n// export default App\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}